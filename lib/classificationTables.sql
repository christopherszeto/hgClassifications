# classificationTables.sql was originally generated by the autoSql program, which also 
# generated classificationTables.c and classificationTables.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.

#All sample predictions and their accuracies
CREATE TABLE jobs (
    id int unsigned not null,	# Prediction Id (auto_increment)
    datasets_id int unsigned not null,	# Datasets Id
    tasks_id int unsigned not null,	# Task id
    classifiers_id int unsigned not null,	# Classifiers Id
    featureSelections_id int unsigned not null,	# FeatureSelections Id
    transformations_id int unsigned not null,	# Trasnformations Id
    subgroups_id int unsigned not null,	# Subgroups Id
    avgTestingAccuracy float not null,	# Average accuracy in tests
    avgTestingAccuracyGain float not null,	# Gain of average testing accuracy over majority classifier
    accuracyType varchar(255) not null,	# Accuracy Type (e.g. k-fold)
    features varchar(255) not null,	# csv of features used
    weights varchar(255) not null,	# csv of weights of features used
    modelPath varchar(255) not null,	# Path on disk to the model generated from this job
              #Indices
    PRIMARY KEY(id)
);

#All prediction tasks
CREATE TABLE tasks (
    id int unsigned not null,	# Prediction task Id (auto_increment)
    name varchar(255) not null,	# Prediction task name
              #Indices
    PRIMARY KEY(id)
);

#All classifiers and their parameters
CREATE TABLE classifiers (
    id int unsigned not null,	# Classifier Id (auto_increment)
    name varchar(255) not null,	# Classifier method
    parameters varchar(255) not null,	# Classifier parameters
              #Indices
    PRIMARY KEY(id)
);

#All classifier results
CREATE TABLE classifierResults (
    id int unsigned not null,	# Classifier Results Id
    tasks_id int unsigned not null,	# Task Id
    jobs_id int unsigned not null,	# Job Id
    sample_id int unsigned not null,	# Sample
    trainingAccuracy float not null,	# Training accuracy
    testingAccuracy float not null,	# Testing accuracy
    predictionScore float not null,	# Raw prediction score, intended for binary classes use
              #Indices
    PRIMARY KEY(id)
);

#Names and parameters for subgroups
CREATE TABLE subgroups (
    id int unsigned not null,	# Subgroups Description Id (auto_increment)
    name varchar(255) not null,	# Subgrouping method
    parameters varchar(255) not null,	# Subgrouping parameters
    datasets_id int unsigned not null,	# Dataset this subgrouping came from
              #Indices
    PRIMARY KEY(id)
);

#Sample subgroups used in classifications
CREATE TABLE samplesInSubgroups (
    id int unsigned not null,	# SamplesInSubgroups id (auto_increment)
    subgroups_id int unsigned not null,	# Subgroups Id (corrosponds to subgroups Ids)
    subgroup int unsigned not null,	# Subgroup assignment
    sample_id int unsigned not null,	# Sample Id
              #Indices
    PRIMARY KEY(id)
);

#Names and parameters for feature select methods in machine learning
CREATE TABLE featureSelections (
    id int unsigned not null,	# featureSelections id (auto_increment)
    name varchar(255) not null,	# Name of feature selection algorithm
    parameters varchar(255) not null,	# Parameters used to run feature selection
    datasets_id int unsigned not null,	# Dataset this feature selection was applied to
    featureCount int unsigned not null,	# Number of features after feature selection
              #Indices
    PRIMARY KEY(id)
);

#Names and parameters for data transformation methods in machine learning
CREATE TABLE transformations (
    id int unsigned not null,	# featureSelections id (auto_increment)
    name varchar(255) not null,	# Name of feature selection algorithm
    parameters varchar(255) not null,	# Parameters used to run feature selection
              #Indices
    PRIMARY KEY(id)
);

#Queue of jobs to run in MLpipeline submitted via the online requester
CREATE TABLE requestQueue (
    id int unsigned not null,	# requestQueue id (auto_increment)
    usrConfig_id int unsigned not null,	# id of the config associated with this queue item
    status varchar(255) not null,	# status of the request (1=unprocessed, 2=processing, 3=processed, 4=error)
    estimatedRunTime double not null,	# Estimated time in seconds for this run to complete after submission
    submissionTime varchar(255) not null,	# Time submission was saved to db
    runBeginTime varchar(255) not null,	# Time the job started running
    runEndTime varchar(255) not null,	# Time the job finished running
              #Indices
    PRIMARY KEY(id)
);

#Table of fields in user submitted machine-learning configurations
CREATE TABLE usrConfig (
    id int unsigned not null,	# usrConfig id (auto_increment)
    profile varchar(255) not null,	# Connection profile to use to get and store data
    db varchar(255) not null,	# Database to use to get and store data
    classifiersRootDir varchar(255) not null,	# Location on disk to find the classifiers installed
    clusterJobPrefix varchar(255) not null,	# Path and name space to store tmp files for classification
    task varchar(255) not null,	# Name of the task being predicted
    inputType varchar(255) not null,	# Type of input (default bioInt)
    dataTableName varchar(255) not null,	# Name of table to use (if inputType=bioInt)
    clinField varchar(255) not null,	# Clinical variable to predict (if inputType=bioInt)
    dataFilepath varchar(255) not null,	# Path to genomic data file (if inputType=flatfiles)
    metadataFilepath varchar(255) not null,	# Path to clinical data file (if inputType=flatfiles)
    trainingDir varchar(255) not null,	# Where to store training files
    validationDir varchar(255) not null,	# Where to store validation files
    modelDir varchar(255) not null,	# Where to store model files
    crossValidation varchar(255) not null,	# crossValidation type
    folds int unsigned not null,	# Number of folds to use (if crossValidation=k-fold or loo)
    foldMultiplier int unsigned not null,	# Number of times to repeat crossValidation
    classifier varchar(255) not null,	# Classifier to use
    outputType varchar(255) not null,	# File format to feed classifier
    parameters varchar(255) not null,	# Classifier parameters
    dataDiscretizer varchar(255) not null,	# Data transformation to use
    dataDiscretizerParameters varchar(255) not null,	# Parameters for data transformation
    clinDiscretizer varchar(255) not null,	# Subgrouping style to use
    clinDiscretizerParameters varchar(255) not null,	# Subgrouping parameters
    featureSelection varchar(255) not null,	# Feature selection to use
    featureSelectionParameters varchar(255) not null,	# feature select parameters
    modelPath varchar(255) not null,	# Path to the fully trained model
              #Indices
    PRIMARY KEY(id)
);

#Table of values found when applying top models to background dataset
CREATE TABLE backgroundModelScores (
    id int unsigned not null,	# backgroundModelScores id (auto_increment)
    jobs_id int unsigned not null,	# id of job this score set comes from
    data_table varchar(255) not null,	# Background dataset used
    max float not null,	# Max score from background dataset
    mean float not null,	# Average score from background dataset
    median float not null,	# Median score from background dataset
    sd float not null,	# Standard deviation from scores applied to background dataset
    min float not null,	# Minimum score when applied to background dataset
    estimatedRunTime int unsigned not null,	# Time taken to run background data through model
              #Indices
    PRIMARY KEY(id)
);
